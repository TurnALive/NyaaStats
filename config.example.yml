# NYAA-STATS CONFIGURATION FILE

# Grabber (main program) configuration
render:
  # Data sources

  # [Required] `level.dat` file path. Example: "/opt/minecraft/world/level.dat"
  level: /opt/Creative/server/world/level.dat
  # [Required] `playerdata` directory path. Example: "/opt/minecraft/world/playerdata"
  playerdata:
    - /opt/Survival/server/Survival/playerdata
    - /opt/SurvivalV1/server/Survival/playerdata
    - /opt/Creative/server/world/playerdata
    - /opt/Anniversary/server/world/playerdata
    - /opt/Flat/server/world/playerdata
    - /opt/Test/server/Survival/playerdata
  # [Required] `stats` directory path. Example: "/opt/minecraft/world/stats". Use the first available one if you have multiple.
  stats:
    - /opt/Survival/server/Survival/stats
    - /opt/SurvivalV1/server/Survival/stats
    - /opt/Creative/server/world/stats
    - /opt/Anniversary/server/world/stats
    - /opt/Flat/server/world/stats
    - /opt/Test/server/Survival/stats

  # [Required] `advancements` directory path. Example: "/opt/minecraft/world/advancements". Use the first available one if you have multiple.
  advancements:
    - /opt/Survival/server/Survival/advancements
    - /opt/SurvivalV1/server/Survival/advancements
    - /opt/Creative/server/world/advancements
    - /opt/Anniversary/server/world/advancements
    - /opt/Flat/server/world/advancements
    - /opt/Test/server/Survival/advancements

  # Whether to only process whitelisted players. Possible values:
  #   {string} - `whitelist.json` file path. Example: "/opt/minecraft/whitelist.json"
  #   (unset)  - Disable this feature (to process all reachable players)
  whitelist:
  # Banned UUID list. Possible values:
  #   {string} - `banned-players.json` file path. Example: "/opt/minecraft/banned-players.json"
  #   (unset)  - Disable this feature (to assume no bans)
  banned-players: /opt/Creative/server/banned-players.json
  # Whether to render banned players. Default value: `false`
  render-banned: false
  # [Required] Crafatar service URL, used for player avatar/skin model generating
  crafatar: https://crafatar.com/
  # [Required] Yggdrasil API Session Server Profile URL
  ygg-profile: https://user.turna.live/api/yggdrasil/sessionserver/session/minecraft/profile

  # Output

  # [Required] Output data directory path (absolute or relative to runtime `config.yml`)
  # Example: "webroot/data"
  output: web/public/data
  # Whether to prompt confirmation to clear output directory. You may want to set `false` if you're
  # using cronjob. Possible values:
  #   `true` | (unset) - Prompt confirmation. You can choose yes or no to output directory clearing
  #   `false`          - Disable this feature (will not clear output directory)
  confirm-clear-data: true
  # [Deprecated]
  time-format: # time format on display, details http://momentjs.com/docs/#/displaying/format/
    full: dddd, MMMM Do, YYYY HH:mm:ss ZZ
    short: MMMM Do, YYYY
    compact: YYYY-M-D HH:mm:ss

# API usage configuration
api:
  # [Required] Mojang API request rate limit (N req per second)
  ratelimit: 2

# Web app configuration
web:
  # [Required] Web app title, will be displayed at page header and as window title
  title: TurnA Stats
  # [Required] Server name, will be displayed at welcome section and page footer
  servername: TurnALive
  # [Required] Server homepage URL, will be displayed at welcome section
  homepage: https://mc.turna.live/
